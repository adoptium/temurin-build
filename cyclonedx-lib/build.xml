<?xml version="1.0"?>
<!--
  ~ ********************************************************************************
  ~ Copyright (c) 2021, 2024 Contributors to the Eclipse Foundation
  ~
  ~ See the NOTICE file(s) with this work for additional
  ~ information regarding copyright ownership.
  ~
  ~ This program and the accompanying materials are made
  ~ available under the terms of the Apache Software License 2.0
  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.
  ~
  ~ SPDX-License-Identifier: Apache-2.0
  ~ ********************************************************************************
-->

<project name="cyclonedx-lib build" default="build" basedir="." xmlns:if="ant:if" xmlns:unless="ant:unless">
        <!--
// jscpd:ignore-start
-->

        <condition property="local.deps.cache.dir.set" else="false">
            <isset property="local.deps.cache.dir"/>
        </condition>

        <!-- Branch of cyberphone/openkeystore to clone -->
        <property name="openkeystore-version" value="1.0.0"/>

        <!-- Retrieve sbom dependency jar: versions, sha256 and download urls -->
        <property file="dependency_data/dependency_data.properties"/>

        <!-- classpath for running application -->
        <property name="classpath" value="build/jar/temurin-gen-sbom.jar:build/jar/temurin-gen-cdxa.jar:build/jar/cyclonedx-core-java.jar:build/jar/jackson-core.jar:build/jar/jackson-dataformat-xml.jar:build/jar/jackson-databind.jar:build/jar/jackson-annotations.jar:build/jar/json-schema-validator.jar:build/jar/commons-codec.jar:build/jar/commons-io.jar:build/jar/github-package-url.jar:build/jar/webpki.org-libext-1.00.jar:build/jar/temurin-sign-sbom.jar:build/jar/commons-collections4.jar:build/jar/commons-lang3.jar:build/jar/stax2-api.jar:build/jar/woodstox-core.jar"/>

        <target name="dep-checks">
                <available file="build/jar/cyclonedx-core-java.jar" property="cyclonedx_available"/>
                <available file="build/jar/jackson-core.jar" property="jackson-core_available"/>
                <available file="build/jar/jackson-dataformat-xml.jar" property="jackson-dataformat_available"/>
                <available file="build/jar/jackson-databind.jar" property="jackson-databind_available"/>
                <available file="build/jar/jackson-annotations.jar" property="jackson-annotations_available"/>
                <available file="build/jar/json-schema-validator.jar" property="json-schema-validator_available"/>
                <available file="build/jar/commons-codec.jar" property="commons-codec_available"/>
                <available file="build/jar/commons-io.jar" property="commons-io_available"/>
                <available file="build/jar/commons-collections4.jar" property="commons-collections4_available"/>
                <available file="build/jar/commons-lang3.jar" property="commons-lang3_available"/>
                <available file="build/jar/github-package-url.jar" property="github-package-url_available"/>
                <available file="build/jar/webpki.org-libext-1.00.jar" property="openkeystore_available"/>
                <available file="build/jar/stax2-api.jar" property="stax2-api_available"/>
                <available file="build/jar/woodstox-core.jar" property="woodstox-core_available"/>
        </target>

        <target name="download-cyclonedx" unless="cyclonedx_available">
                <get-component component="cyclonedx-core-java"/>
        </target>

        <target name="download-jackson-core" unless="jackson-core_available">
                <get-component component="jackson-core"/>
        </target>

        <target name="clone-and-build-openkeystore" unless="openkeystore_available">
		            <mkdir dir="build"/>
		            <exec executable="git" dir="build">
			          <arg line="clone --branch ${openkeystore-version} https://github.com/cyberphone/openkeystore" />
		            </exec>
		            <ant dir="build/openkeystore/library" target="build"/>
                <move todir="build/jar" >
                        <fileset dir="build/openkeystore/library/dist" >
                                <include name="*.jar" />
                        </fileset>
                </move>
        </target>

        <target name="build-sign-sbom" depends="dep-checks, clone-and-build-openkeystore, download-cyclonedx, download-jackson-core, download-jackson-dataformat-xml, download-jackson-databind, download-jackson-annotations, download-json-schema-validator, download-commons-codec, download-commons-io, download-commons-collections4, download-commons-lang3, download-stax2-api, download-woodstox-core, download-github-package-url, compile-sign-sbom, jar-sign-sbom">
                <echo message="Building cyclonedx-lib TemurinSignSBOM"/>
        </target>

        <target name="compile-sign-sbom">
                <mkdir dir="build/sign_classes"/>
                <javac srcdir="sign_src" destdir="build/sign_classes" classpath="build/jar/cyclonedx-core-java.jar:build/jar/webpki.org-libext-1.00.jar:build/jar/webpki.org-webutil-1.00.jar" includeantruntime="false"/>
                <javac debug="true" debuglevel="lines,vars,source" srcdir="sign_src" destdir="build/sign_classes" classpath="build/jar/cyclonedx-core-java.jar:build/jar/webpki.org-libext-1.00.jar:build/jar/webpki.org-webutil-1.00.jar" includeantruntime="false"/>
        </target>

        <target name="jar-sign-sbom">
                <mkdir dir="build/jar"/>
                <jar destfile="build/jar/temurin-sign-sbom.jar" basedir="build/sign_classes">
                        <manifest>
                                <attribute name="Main-Class" value="temurin.sbom.TemurinSignSBOM"/>
                        </manifest>
                </jar>
        </target>

        <target name="download-jackson-dataformat-xml" unless="jackson-dataformat_available">
                <get-component component="jackson-dataformat-xml"/>
        </target>

        <target name="download-jackson-databind" unless="jackson-databind_available">
                <get-component component="jackson-databind"/>
        </target>

        <target name="download-jackson-annotations" unless="jackson-annotations_available">
                <get-component component="jackson-annotations"/>
        </target>

        <target name="download-json-schema-validator" unless="json-schema-validator_available">
                <get-component component="json-schema-validator"/>
        </target>

        <target name="download-commons-codec" unless="commons-codec_available">
                <get-component component="commons-codec"/>
        </target>

        <target name="download-commons-io" unless="commons-io_available">
                <get-component component="commons-io"/>
        </target>

        <target name="download-commons-collections4" unless="commons-collections4_available">
                <get-component component="commons-collections4"/>
        </target>

        <target name="download-commons-lang3" unless="commons-lang3_available">
                <get-component component="commons-lang3"/>
        </target>

        <target name="download-github-package-url" unless="github-package-url_available">
                <get-component component="github-package-url"/>
        </target>

        <target name="download-stax2-api" unless="stax2-api_available">
                <get-component component="stax2-api"/>
        </target>

        <target name="download-woodstox-core" unless="woodstox-core_available">
                <get-component component="woodstox-core"/>
        </target>

	<target name="build" depends="dep-checks, download-cyclonedx, download-jackson-core, download-jackson-dataformat-xml, download-jackson-databind, download-jackson-annotations, download-json-schema-validator, download-commons-codec, download-commons-io, download-commons-collections4, download-commons-lang3, download-stax2-api, download-woodstox-core, download-github-package-url, compile, jar">
                <echo message="Building cyclonedx-lib"/>
        </target>

        <target name="clean">
                <delete dir="build"/>
        </target>

        <target name="compile">
                <mkdir dir="build/classes"/>
                <javac srcdir="src" destdir="build/classes" classpath="build/jar/cyclonedx-core-java.jar:build/jar/webpki.org-libext-1.00.jar" includeantruntime="false"/>
                <javac debug="true" debuglevel="lines,vars,source" srcdir="src" destdir="build/classes" classpath="build/jar/cyclonedx-core-java.jar:build/jar/webpki.org-libext-1.00.jar" includeantruntime="false"/>
        </target>

        <target name="jar">
                <mkdir dir="build/jar"/>
                <jar destfile="build/jar/temurin-gen-sbom.jar" basedir="build/classes" includes="temurin/sbom/TemurinGenSBOM*,package-info*">
                        <manifest>
                                <attribute name="Main-Class" value="temurin.sbom.TemurinGenSBOM"/>
                        </manifest>
                </jar>
                <jar destfile="build/jar/temurin-gen-cdxa.jar" basedir="build/classes" includes="temurin/sbom/TemurinGenCDXA*,package-info*">
                        <manifest>
                                <attribute name="Main-Class" value="temurin.sbom.TemurinGenCDXA"/>
                        </manifest>
                </jar>
        </target>

        <property name="testSBOMFile" location="build/testSBOM.json"/>
        <property name="privatePemFile" location="build/RSAPrivate.pem"/>
        <property name="publicPemFile" location="build/RSAPublic.pub"/>

        <target name="runSignAndVerifySBOM">
                <delete file="${testSBOMFile}"/>
                <delete file="${privatePemFile}"/>
                <delete file="${publicPemFile}"/>
                <exec command="openssl genpkey -algorithm RSA -pass pass:test -outform PEM -out ${privatePemFile} -pkeyopt rsa_keygen_bits:2048"/>
                <exec command="openssl rsa -in ${privatePemFile} -passin pass:test -pubout -out ${publicPemFile}"/>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--createNewSBOM"/>
                  <arg value="--name"/>
                  <arg value="Temurin"/>
                  <arg value="--version"/>
                  <arg value="jdk17.0.6"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinSignSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--signSBOM"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                  <arg value="--privateKeyFile"/>
                  <arg value="${privatePemFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinSignSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--verifySignature"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                  <arg value="--publicKeyFile"/>
                  <arg value="${publicPemFile}"/>
                </java>
        </target>

        <target name="runCDXA">
                <property name="testCDXA_XMLFile" location="build/testCDXA.xml"/>
                <property name="testCDXA_JSONFile" location="build/testCDXA.json"/>
                <delete file="${testCDXA_XMLFile}"/>
                <delete file="${testCDXA_JSONFile}"/>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenCDXA" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--createNewCDXA"/>
                  <arg value="--attesting-org-name"/>
                  <arg value="Acme Inc"/>
                  <arg value="--predicate"/>
                  <arg value="VERIFIED_REPRODUCIBLE_BUILD"/>
                  <arg value="--target-name"/>
                  <arg value="Temurin jdk-21.0.5+11 x64 Linux"/>
                  <arg value="--target-url"/>
                  <arg value="https://api.adoptium.net/v3/binary/version/jdk-21.0.5+11/linux/x64/jdk/hotspot/normal/eclipse"/>
                  <arg value="--target-sha256-hash"/>
                  <arg value="1234567890123456789012345678901234567890123456789012345678901234"/>
                  <arg value="--affirmation-stmt"/>
                  <arg value="Acme confirms a verified reproducible build"/>
                  <arg value="--affirmation-website"/>
                  <arg value="https://acme-inc.com"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testCDXA_XMLFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenCDXA" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--createNewCDXA"/>
                  <arg value="--attesting-org-name"/>
                  <arg value="Acme Inc"/>
                  <arg value="--predicate"/>
                  <arg value="VERIFIED_REPRODUCIBLE_BUILD"/>
                  <arg value="--target-name"/>
                  <arg value="Temurin jdk-21.0.5+11 x64 Linux"/>
                  <arg value="--target-url"/>
                  <arg value="https://api.adoptium.net/v3/binary/version/jdk-21.0.5+11/linux/x64/jdk/hotspot/normal/eclipse"/>
                  <arg value="--target-sha256-hash"/>
                  <arg value="1234567890123456789012345678901234567890123456789012345678901234"/>
                  <arg value="--affirmation-stmt"/>
                  <arg value="Acme confirms a verified reproducible build"/>
                  <arg value="--affirmation-website"/>
                  <arg value="https://acme-inc.com"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testCDXA_JSONFile}"/>
                </java>
        </target>

        <target name="run">
                <property name="testSBOMFile" location="build/testSBOM.json"/>
                <property name="testSBOMFile_xml" location="build/testSBOM.xml"/>
                <delete file="${testSBOMFile}"/>
                <delete file="${testSBOMFile_xml}"/>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--createNewSBOM"/>
                  <arg value="--name"/>
                  <arg value="Temurin"/>
                  <arg value="--version"/>
                  <arg value="jdk17+35"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>

                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--createNewSBOM"/>
                  <arg value="--name"/>
                  <arg value="Temurin"/>
                  <arg value="--version"/>
                  <arg value="jdk17+35"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>

                <!-- JSON tests -->
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponent"/>
                  <arg value="--compName"/>
                  <arg value="JDK-info"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="JDK-info"/>
                  <arg value="--name"/>
                  <arg value="OS"/>
                  <arg value="--value"/>
                  <arg value="Linux"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
                  <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="JDK-info"/>
                  <arg value="--name"/>
                  <arg value="arch"/>
                  <arg value="--value"/>
                  <arg value="x64"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
                  <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="JDK-info"/>
                  <arg value="--name"/>
                  <arg value="variant"/>
                  <arg value="--value"/>
                  <arg value="hotspot"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="JDK-info"/>
                  <arg value="--name"/>
                  <arg value="binary-type"/>
                  <arg value="--value"/>
                  <arg value="jdk"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
               <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponent"/>
                  <arg value="--compName"/>
                  <arg value="Temurin Build"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="Temurin Build"/>
                  <arg value="--name"/>
                  <arg value="buildRef"/>
                  <arg value="--value"/>
                  <arg value="https://github.com/adoptium/temurin-build/commit/c3a40"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="Temurin Build"/>
                  <arg value="--name"/>
                  <arg value="ScmRef"/>
                  <arg value="--value"/>
                  <arg value="jdk-17+35_adopt"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponent"/>
                  <arg value="--compName"/>
                  <arg value="make-arguments"/>
                  <arg value="--description"/>
                  <arg value="temurin build make arguments"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="make-arguments"/>
                  <arg value="--name"/>
                  <arg value="makejdk_any_platform_args"/>
                  <arg value="--value"/>
                  <arg value="--clean-git-repo --jdk-boot-dir /usr/lib/jvm/jdk-16 --configure-args  --disable-warnings-as-errors --enable-ccache --enable-dtrace --target-file-name OpenJDK17-jdk_x64_linux_hotspot_17_35.tar.gz --release --clean-libs --tag jdk-17+35_adopt --skip-freetype --use-jep319-certs --create-debug-image --build-variant hotspot jdk17"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="make-arguments"/>
                  <arg value="--name"/>
                  <arg value="make_command_args"/>
                  <arg value="--value"/>
                  <arg value="make product-images legacy-jre-image   test-image"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponent"/>
                  <arg value="--compName"/>
                  <arg value="configure_arguments"/>
                  <arg value="--description"/>
                  <arg value="temurin build configure arguments"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="configure_arguments"/>
                  <arg value="--name"/>
                  <arg value="configure_arguments"/>
                  <arg value="--value"/>
                  <arg value="CONFIGURE_ARGUMENTS..."/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponent"/>
                  <arg value="--compName"/>
                  <arg value="Temurin build scripts/source"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="Temurin build scripts/source"/>
                  <arg value="--name"/>
                  <arg value="openjdk_built_config"/>
                  <arg value="--value"/>
                  <arg value="OPENJDK_BUILT_CONFIG..."/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="Temurin build scripts/source"/>
                  <arg value="--name"/>
                  <arg value="openjdk-source"/>
                  <arg value="--value"/>
                  <arg value="https://github.com/adoptium/jdk17/commit/a5afad28437"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponent"/>
                  <arg value="--compName"/>
                  <arg value="docker container built"/>
                  <arg value="--description"/>
                  <arg value="If built within a docker container, SHA digest of the image it was built from"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="docker container built"/>
                  <arg value="--name"/>
                  <arg value="build_env_docker_image_digest"/>
                  <arg value="--value"/>
                  <arg value="[adoptopenjdk/centos6_build_image@sha256:e9fa19de1a830399a91044a277a6cca7bbd915322187825bfd4cfa752917adab]\n"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponent"/>
                  <arg value="--compName"/>
                  <arg value="Built binary java-version string"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="Built binary java-version string"/>
                  <arg value="--name"/>
                  <arg value="full_version_output"/>
                  <arg value="--value"/>
                  <arg value="openjdk version: 17 2021-09-14\nOpenJDK Runtime Environment Temurin-17+35 (build 17+35)\nOpenJDK 64-Bit Server VM Temurin-17+35 (build 17+35, mixed mode, sharing)\n"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addMetadata"/>
                  <arg value="--metadataName"/>
                  <arg value="Eclipse Adoptium"/>
                  <arg value="--jsonFile"/>
                 <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addMetadataTools"/>
                  <arg value="--tool"/>
                  <arg value="BOOTJDK"/>
                  <arg value="--version"/>
                  <arg value="20.0.2+9"/>
                  <arg value="--jsonFile"/>
                 <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addMetadataTools"/>
                  <arg value="--tool"/>
                  <arg value="GCC"/>
                  <arg value="--version"/>
                  <arg value="10.1"/>
                  <arg value="--jsonFile"/>
                 <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addFormulation"/>
                  <arg value="--formulaName"/>
                  <arg value="MyFormula"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addFormulationComp"/>
                  <arg value="--formulaName"/>
                  <arg value="MyFormula"/>
                  <arg value="--name"/>
                  <arg value="CycloneDX SHAs"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addFormulationCompProp"/>
                  <arg value="--formulaName"/>
                  <arg value="MyFormula"/>
                  <arg value="--compName"/>
                  <arg value="CycloneDX SHAs"/>
                  <arg value="--name"/>
                  <arg value="CycloneDX core lib"/>
                  <arg value="--value"/>
                  <arg value="sha123"/>
                  <arg value="--jsonFile"/>
                  <arg value="${testSBOMFile}"/>
                </java>

                <!-- XML tests -->
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponent"/>
                  <arg value="--compName"/>
                  <arg value="JDK-info"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="JDK-info"/>
                  <arg value="--name"/>
                  <arg value="OS"/>
                  <arg value="--value"/>
                  <arg value="Linux"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
                  <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="JDK-info"/>
                  <arg value="--name"/>
                  <arg value="arch"/>
                  <arg value="--value"/>
                  <arg value="x64"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
                  <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="JDK-info"/>
                  <arg value="--name"/>
                  <arg value="variant"/>
                  <arg value="--value"/>
                  <arg value="hotspot"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="JDK-info"/>
                  <arg value="--name"/>
                  <arg value="binary-type"/>
                  <arg value="--value"/>
                  <arg value="jdk"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
               <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponent"/>
                  <arg value="--compName"/>
                  <arg value="Temurin Build"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="Temurin Build"/>
                  <arg value="--name"/>
                  <arg value="buildRef"/>
                  <arg value="--value"/>
                  <arg value="https://github.com/adoptium/temurin-build/commit/c3a40"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="Temurin Build"/>
                  <arg value="--name"/>
                  <arg value="ScmRef"/>
                  <arg value="--value"/>
                  <arg value="jdk-17+35_adopt"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponent"/>
                  <arg value="--compName"/>
                  <arg value="make-arguments"/>
                  <arg value="--description"/>
                  <arg value="temurin build make arguments"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="make-arguments"/>
                  <arg value="--name"/>
                  <arg value="makejdk_any_platform_args"/>
                  <arg value="--value"/>
                  <arg value="--clean-git-repo --jdk-boot-dir /usr/lib/jvm/jdk-16 --configure-args  --disable-warnings-as-errors --enable-ccache --enable-dtrace --target-file-name OpenJDK17-jdk_x64_linux_hotspot_17_35.tar.gz --release --clean-libs --tag jdk-17+35_adopt --skip-freetype --use-jep319-certs --create-debug-image --build-variant hotspot jdk17"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="make-arguments"/>
                  <arg value="--name"/>
                  <arg value="make_command_args"/>
                  <arg value="--value"/>
                  <arg value="make product-images legacy-jre-image   test-image"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponent"/>
                  <arg value="--compName"/>
                  <arg value="configure_arguments"/>
                  <arg value="--description"/>
                  <arg value="temurin build configure arguments"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="configure_arguments"/>
                  <arg value="--name"/>
                  <arg value="configure_arguments"/>
                  <arg value="--value"/>
                  <arg value="CONFIGURE_ARGUMENTS..."/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponent"/>
                  <arg value="--compName"/>
                  <arg value="Temurin build scripts/source"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="Temurin build scripts/source"/>
                  <arg value="--name"/>
                  <arg value="openjdk_built_config"/>
                  <arg value="--value"/>
                  <arg value="OPENJDK_BUILT_CONFIG..."/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="Temurin build scripts/source"/>
                  <arg value="--name"/>
                  <arg value="openjdk-source"/>
                  <arg value="--value"/>
                  <arg value="https://github.com/adoptium/jdk17/commit/a5afad28437"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponent"/>
                  <arg value="--compName"/>
                  <arg value="docker container built"/>
                  <arg value="--description"/>
                  <arg value="If built within a docker container, SHA digest of the image it was built from"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="docker container built"/>
                  <arg value="--name"/>
                  <arg value="build_env_docker_image_digest"/>
                  <arg value="--value"/>
                  <arg value="[adoptopenjdk/centos6_build_image@sha256:e9fa19de1a830399a91044a277a6cca7bbd915322187825bfd4cfa752917adab]\n"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponent"/>
                  <arg value="--compName"/>
                  <arg value="Built binary java-version string"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addComponentProp"/>
                  <arg value="--compName"/>
                  <arg value="Built binary java-version string"/>
                  <arg value="--name"/>
                  <arg value="full_version_output"/>
                  <arg value="--value"/>
                  <arg value="openjdk version: 17 2021-09-14\nOpenJDK Runtime Environment Temurin-17+35 (build 17+35)\nOpenJDK 64-Bit Server VM Temurin-17+35 (build 17+35, mixed mode, sharing)\n"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addMetadata"/>
                  <arg value="--metadataName"/>
                  <arg value="Eclipse Adoptium"/>
                  <arg value="--xmlFile"/>
                 <arg value="${testSBOMFile_xml}"/>
                </java>


                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addMetadataTools"/>
                  <arg value="--tool"/>
                  <arg value="BOOTJDK"/>
                  <arg value="--version"/>
                  <arg value="20.0.2+9"/>
                  <arg value="--xmlFile"/>
                 <arg value="${testSBOMFile_xml}"/>
                </java>

                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addMetadataTools"/>
                  <arg value="--tool"/>
                  <arg value="GCC"/>
                  <arg value="--version"/>
                  <arg value="10.1"/>
                  <arg value="--xmlFile"/>
                 <arg value="${testSBOMFile_xml}"/>
                </java>

                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addFormulation"/>
                  <arg value="--formulaName"/>
                  <arg value="MyFormula"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addFormulationComp"/>
                  <arg value="--formulaName"/>
                  <arg value="MyFormula"/>
                  <arg value="--name"/>
                  <arg value="CycloneDX SHAs"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
                <java classpath="${classpath}" classname="temurin.sbom.TemurinGenSBOM" fork="yes" failonerror="yes">
                  <arg value="--verbose"/>
                  <arg value="--addFormulationCompProp"/>
                  <arg value="--formulaName"/>
                  <arg value="MyFormula"/>
                  <arg value="--compName"/>
                  <arg value="CycloneDX SHAs"/>
                  <arg value="--name"/>
                  <arg value="CycloneDX core lib"/>
                  <arg value="--value"/>
                  <arg value="sha123"/>
                  <arg value="--xmlFile"/>
                  <arg value="${testSBOMFile_xml}"/>
                </java>
        </target>

	<macrodef name="get-component" description="Obtain the given component from the local cache if available or download, and verify its checksum.">
		<attribute name="component" description="Dependency component to obtain"/>
		<sequential>
			<echo message="Executing macro get-component for: @{component}"/>
			<echo message="Expected checksum: ${@{component}.sha256}"/>

                        <!-- Check if local cache file is available? -->
                        <available file="${local.deps.cache.dir}/${@{component}.jar}" property="@{component}_cache_available" if:true="${local.deps.cache.dir.set}"/>
                        <property name="@{component}_cache_available" value="false" unless:true="${local.deps.cache.dir.set}"/>

                        <!-- Use local cache if available, otherwise download -->
                        <copy verbose="true" file="${local.deps.cache.dir}/${@{component}.jar}" tofile="build/jar/@{component}.jar" if:true="${@{component}_cache_available}"/>
                        <download-file unless:true="${@{component}_cache_available}"
				checksum="${@{component}.sha256}"
                                destdir="build/jar"
				destfile="@{component}.jar"
				srcurl="${@{component}.url}"/>
		</sequential>
	</macrodef>

	<macrodef name="download-file" description="Use curl to download a file">
		<attribute name="srcurl" description="URL of file to download"/>
		<attribute name="destdir" default="build/jar" description="Directory in which to place the downloaded file"/>
		<attribute name="destfile" description="File name of the downloaded file"/>
		<attribute name="checksum" description="Expected checksum value of the downloaded file"/>
		<attribute name="algorithm" default="SHA-256" description="Algorithm for checksum"/>
		<sequential>
			<echo message="Executing macro download-file"/>
			<echo message="File to download: @{srcurl}"/>
			<echo message="Destination: @{destdir}/@{destfile}"/>
			<echo message="Download tool: curl"/>
			<mkdir dir="@{destdir}"/>
			<exec executable="curl">
				<arg value="-L"/>
				<arg value="-o"/>
				<arg value="@{destdir}/@{destfile}"/>
				<arg value="@{srcurl}"/>
			</exec>
			<local name="downloaded.file.checksum"/>
			<checksum file="@{destdir}/@{destfile}" algorithm="@{algorithm}" property="downloaded.file.checksum" />
			<local name="checksum.match"/>
			<condition property="checksum.match">
				<equals arg1="${downloaded.file.checksum}" arg2="@{checksum}"/>
			</condition>
			<fail message="The checksum of the @{destfile} file does not match expected value." unless="checksum.match"/>
		</sequential>
	</macrodef>
</project>
<!--
// jscpd:ignore-end
-->
